USE db_101;
-- to do 
DROP PROCEDURE IF EXISTS USP_UPDATE_USER;
DELIMITER //
CREATE PROCEDURE USP_UPDATE_USER(
 IN USERID varchar(36),
 IN FIRSTNAME varchar(50),
 IN LASTNAME varchar(50),
 IN EMAIL varchar(100),
 IN AGE INT,
 IN WEIGHT DOUBLE,
 IN GOAL varchar(100),
 IN GOALTYPECODE varchar(1),
 IN LEVELOFFITNESS INT,
 IN USERTELEGRANID varchar(15),
 IN FRIENDTELEGRAMID varchar(15),
 OUT OUTPUT JSON
)
BEGIN
DECLARE GOALTYPEID VARCHAR(36);

SELECT  GOALTYPE.ID FROM GOALTYPE WHERE GOALTYPE.GOALTYPECODE = GOALTYPECODE AND LOWER(GOALTYPE.GOALTYPE) = LOWER(GOAL) INTO GOALTYPEID;

UPDATE `USER` SET
	FIRSTNAME = FIRSTNAME,
    LASTNAME = LASTNAME,
    EMAIL = EMAIL,
    AGE = AGE,
    WEIGHT = WEIGHT,
    GOALTYPEID = GOALTYPEID,
    LEVELOFFITNESS = LEVELOFFITNESS,
    USERTELEGRAMID = USERTELEGRAMID,
    FRIENDTELEGRAMID = FRIENDTELEGRAMID
WHERE `USER`.ID = USERID;

SELECT JSON_MERGE_PRESERVE(
       JSON_OBJECT('id', `USER`.ID),
       JSON_OBJECT('first_name', FIRSTNAME),
       JSON_OBJECT('last_name', LASTNAME),
       JSON_OBJECT('name', CONCAT(FIRSTNAME,LASTNAME)),
       JSON_OBJECT('email', EMAIL),
       JSON_OBJECT('age', AGE),
       JSON_OBJECT('gender', GENDER),
       JSON_OBJECT('weight', WEIGHT),
       JSON_OBJECT('goal', GOALTYPE.GOALTYPECODE),
       JSON_OBJECT('goal_name', GOALTYPE.GOALTYPE),
       JSON_OBJECT('level_of_fitness', LEVELOFFITNESS),
       JSON_OBJECT('telegram_ID_user', USERTELEGRAMID),
       JSON_OBJECT('telegram_ID_friend', FRIENDTELEGRAMID)
    ) FROM `USER` inner join GOALTYPE on GOALTYPE.ID =  `USER`.GOALTYPEID
    WHERE `USER`.ID = USERID INTO OUTPUT;

END
//
DELIMITER ;